// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.BiggerPicture || (window.BiggerPicture = {});

  BiggerPicture.Gallery = (function() {
    Gallery.prototype.slides = [];

    Gallery.prototype.container = $("<div />", {
      "class": "bigger-picture"
    });

    function Gallery(images) {
      this.trigger_resize = __bind(this.trigger_resize, this);
      this.test_keypress = __bind(this.test_keypress, this);
      var image, _i, _len;
      $("body").addClass("bigger-picture-active").append(this.container);
      for (_i = 0, _len = images.length; _i < _len; _i++) {
        image = images[_i];
        this.set_up_image(image);
      }
      this.set_up_listeners();
      this.set_current();
      window.onresize = this.trigger_resize;
    }

    Gallery.prototype.remove = function() {
      $("body").removeClass("bigger-picture-active");
      this.container.remove();
      return delete this.slides;
    };

    Gallery.prototype.set_up_image = function(image) {
      if (image.src) {
        return this.slides.push(new BiggerPicture.Slide(image, this.container));
      }
    };

    Gallery.prototype.set_current = function(to) {
      if (to == null) {
        to = 0;
      }
      window.scroll(0, 0);
      if (this.current_index != null) {
        this.hide_current();
      }
      this.current_index = to;
      return this.slides[this.current_index].show_slide();
    };

    Gallery.prototype.hide_current = function() {
      return this.slides[this.current_index].hide_slide();
    };

    Gallery.prototype.set_up_listeners = function() {
      return $("body").on("keydown", this.test_keypress);
    };

    Gallery.prototype.test_keypress = function(evt) {
      switch (evt.keyCode) {
        case 39:
        case 40:
          evt.preventDefault();
          return this.set_current(this.current_index < this.slides.length - 1 ? this.current_index + 1 : 0);
        case 37:
        case 38:
          evt.preventDefault();
          return this.set_current(this.current_index > 0 ? this.current_index - 1 : this.slides.length - 1);
        case 27:
          evt.preventDefault();
          return this.remove();
      }
    };

    Gallery.prototype.trigger_resize = function() {
      return this.slides[this.current_index].set_image_size_for_display();
    };

    return Gallery;

  })();

  window.BiggerPicture || (window.BiggerPicture = {});

  BiggerPicture.Slide = (function() {
    function Slide(image, container) {
      this.image = image;
      this.container = container;
      this.image_loaded = __bind(this.image_loaded, this);
      this.img = new Image();
      this.img.addEventListener("load", this.image_loaded);
      this.img.style.display = 'none';
      this.img.src = this.image.src;
      this.container.append(this.img);
    }

    Slide.prototype.set_image_size_for_display = function() {
      var container_height, container_width, height_scale, scale, width_scale;
      container_height = this.container.height() - 75;
      container_width = this.container.width() * .85;
      height_scale = this.raw_image_height > container_height ? container_height / this.raw_image_height : 1;
      width_scale = this.raw_image_width > container_width ? container_width / this.raw_image_width : 1;
      scale = height_scale < width_scale ? height_scale : width_scale;
      this.img.width = Math.floor(this.raw_image_width * scale);
      return this.img.height = Math.floor(this.raw_image_height * scale);
    };

    Slide.prototype.image_loaded = function() {
      this.raw_image_height = this.img.height;
      this.raw_image_width = this.img.width;
      this.loaded = true;
      if (this.pending_show) {
        return this.show_slide();
      }
    };

    Slide.prototype.show_slide = function() {
      if (!this.loaded) {
        this.pending_show = true;
        return;
      }
      this.set_image_size_for_display();
      this.img.style.display = 'block';
      return this.pending_show = false;
    };

    Slide.prototype.hide_slide = function() {
      return this.img.style.display = 'none';
    };

    return Slide;

  })();

}).call(this);
