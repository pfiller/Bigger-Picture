// Generated by CoffeeScript 1.6.3
(function() {
  var BiggerPicture,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  BiggerPicture = BiggerPicture || {};

  BiggerPicture.App = (function() {
    function App() {
      var container, containers, image_el, images, _i, _len;
      containers = $(".bpImageTop, .bpBoth");
      images = [];
      for (_i = 0, _len = containers.length; _i < _len; _i++) {
        container = containers[_i];
        container = $(container);
        image_el = container.find("img").first();
        images.push({
          image_el: image_el,
          src: image_el.attr('src'),
          caption: container.find(".bpCaption").remove("a, div").text()
        });
      }
      new BiggerPicture.Gallery(images);
    }

    return App;

  })();

  setTimeout(function() {
    return new BiggerPicture.App();
  });

  0;

  BiggerPicture = BiggerPicture || {};

  BiggerPicture.Gallery = (function() {
    Gallery.prototype.slides = [];

    Gallery.prototype.container = $("<div />", {
      "class": "bigger-picture"
    });

    Gallery.prototype.overlay = $("<div />", {
      "class": "bigger-picture-overlay"
    });

    Gallery.prototype.ul = $("<ul />", {
      "class": "bigger-picture-list"
    });

    function Gallery(images) {
      this.trigger_resize = __bind(this.trigger_resize, this);
      this.test_keypress = __bind(this.test_keypress, this);
      var image, _i, _len;
      this.container.append(this.overlay, this.ul);
      $("body").append(this.container);
      for (_i = 0, _len = images.length; _i < _len; _i++) {
        image = images[_i];
        this.set_up_image(image);
      }
      this.set_up_listeners();
      this.set_current();
      window.onresize = this.trigger_resize;
    }

    Gallery.prototype.set_up_image = function(image) {
      var list_image;
      list_image = $("<li >").hide();
      this.ul.append(list_image);
      return this.slides.push(new BiggerPicture.Slide(image, list_image));
    };

    Gallery.prototype.set_current = function(to) {
      if (to == null) {
        to = 0;
      }
      window.scroll(0, 0);
      if (this.current_index != null) {
        this.hide_current();
      }
      this.current_index = to;
      return this.slides[this.current_index].show_slide();
    };

    Gallery.prototype.hide_current = function() {
      return this.slides[this.current_index].hide_slide();
    };

    Gallery.prototype.set_up_listeners = function() {
      return $("body").on("keydown", this.test_keypress);
    };

    Gallery.prototype.test_keypress = function(evt) {
      var kc;
      kc = evt.keyCode;
      if ((kc === 39 || kc === 40)) {
        evt.preventDefault();
        return this.set_current(this.current_index < this.slides.length - 1 ? this.current_index + 1 : 0);
      } else if ((kc === 37 || kc === 38)) {
        evt.preventDefault();
        return this.set_current(this.current_index > 0 ? this.current_index - 1 : this.slides.length - 1);
      }
    };

    Gallery.prototype.trigger_resize = function() {
      return this.slides[this.current_index].set_image_size_for_display();
    };

    return Gallery;

  })();

  BiggerPicture = BiggerPicture || {};

  BiggerPicture.Slide = (function() {
    function Slide(image, element) {
      this.image = image;
      this.element = element;
      this.image_loaded = __bind(this.image_loaded, this);
      this.list = this.element.parents("ul");
      this.img = new Image();
      this.img.addEventListener("load", this.image_loaded);
      this.img.src = this.image.src;
      this.element.append(this.img);
    }

    Slide.prototype.set_image_size_for_display = function() {
      var list_height, list_width, scale;
      list_height = this.list.height();
      list_width = this.list.width();
      if (this.raw_image_height > list_height || this.raw_image_width > list_width) {
        scale = this.raw_image_width > this.raw_image_height ? list_width / this.raw_image_width : list_height / this.raw_image_height;
      } else {
        scale = 1;
      }
      this.img.width = Math.floor(this.raw_image_width * scale);
      return this.img.height = Math.floor(this.raw_image_height * scale);
    };

    Slide.prototype.image_loaded = function() {
      this.raw_image_height = this.img.height;
      this.raw_image_width = this.img.width;
      this.loaded = true;
      if (this.pending_show) {
        return this.show_slide();
      }
    };

    Slide.prototype.show_slide = function() {
      if (!this.loaded) {
        this.pending_show = true;
        return;
      }
      this.set_image_size_for_display();
      this.element.fadeIn("fast");
      return this.pending_show = false;
    };

    Slide.prototype.hide_slide = function() {
      return this.element.fadeOut("fast");
    };

    return Slide;

  })();

}).call(this);
